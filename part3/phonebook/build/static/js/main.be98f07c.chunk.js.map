{"version":3,"sources":["component/Person.js","component/Persons.js","component/Filter.js","component/Personform.js","services/personsServices.js","component/Notification.js","App.js","index.js"],"names":["Person","person","deletEntry","name","number","onClick","Persons","persons","map","id","Filter","filter","filterHandler","value","onChange","PersonForm","handleSubmit","handleInput","newName","newNumber","onSubmit","type","baseUrl","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","nameFilter","setNameFilter","messageState","setMessageState","useEffect","axios","get","then","response","data","initialPersons","PersonsToShow","toLowerCase","includes","e","target","preventDefault","some","newPersonEntry","find","personToUpdate","window","confirm","put","update","updatedPerson","setTimeout","catch","err","personToAdd","post","create","addedPerson","personToDelete","delete","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be98f07c.chunk.js","sourcesContent":["\nconst Person = ({ person, deletEntry }) => {\n\n\n    return <li>{person.name} {person.number} <button onClick={() => deletEntry(person)}>Delete</button></li>\n\n}\nexport default Person","import Person from './Person'\n\nconst Persons = ({ persons, deletEntry }) => {\n    return (\n        <ul>{persons.map(person => <Person key={person.id} person={person} deletEntry={deletEntry} />)}</ul>)\n}\n\n\n\nexport default Persons","const Filter = ({ filter, filterHandler }) => <> filter shown with: <input name='filter' value={filter} onChange={filterHandler} /></>\n\nexport default Filter","const PersonForm = ({ handleSubmit, handleInput, newName, newNumber }) =>\n    <form onSubmit={handleSubmit}>\n        <div>\n            name: <input name='name' value={newName} onChange={handleInput} />\n        </div>\n        <div>number: <input name='number' value={newNumber} onChange={handleInput} /></div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAllPersons = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\nconst create = personToAdd => {\n    const request = axios.post(baseUrl, personToAdd)\n    return request.then(response => response.data)\n}\nconst remove = (id,) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\nconst update = (id, personToUpdate) => {\n    const request = axios.put(`${baseUrl}/${id}`, personToUpdate)\n    return request.then(response => response.data)\n}\n\nexport { getAllPersons, create, remove, update }","const Notification = ({ message }) => {\n    switch (message.type) {\n        case null:\n            return null;\n        case 'err':\n            return (\n                <div className=\"notification err\">\n                    {message.message}\n                </div>)\n        default:\n            return (\n                <div className=\"notification success\">\n                    {message.message}\n                </div>\n            )\n    }\n}\nexport default Notification","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Persons from './component/Persons'\nimport Filter from './component/Filter'\nimport PersonForm from './component/Personform'\nimport { getAllPersons, create, remove, update } from './services/personsServices'\nimport Notification from './component/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [nameFilter, setNameFilter] = useState('')\n    const [messageState, setMessageState] = useState({ message: null, type: null })\n    ///Load Perons from server when start:\n    useEffect(() => {\n        getAllPersons().then(initialPersons => setPersons(initialPersons))\n    }, [])\n\n\n\n    // Filter :display only persons related to input\n    const handleFilter = (e) => {\n        setNameFilter(e.target.value)\n    }\n    const PersonsToShow = nameFilter === ''\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n\n\n    // Name and number inputs\n    const handleInput = (e) => {\n        if (e.target.name === 'name') setNewName(e.target.value)\n        if (e.target.name === 'number') setNewNumber(e.target.value)\n    }\n\n    // Input from user\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const isPersonAdded = persons.some(person => person.name === newName)\n        // if new person is already in database\n        if (isPersonAdded) {\n            const newPersonEntry = persons.find(person => person.name === newName)\n            const personToUpdate = { ...newPersonEntry, number: newNumber }\n            if (window.confirm(`${newName} is already added to phonebook,replace the old number with new one?`)) {\n                update(personToUpdate.id, personToUpdate)\n                    .then(updatedPerson => {\n                        setPersons(persons.map(person => person.id === updatedPerson.id ? updatedPerson : person))\n                        setMessageState({ message: ` ${updatedPerson.name} was successfully updated`, type: 'success' })\n                        setTimeout(() => setMessageState({ message: null, type: null }), 5000)\n\n                    })\n                    .catch(err => {\n                        setMessageState({ message: `Information of ${newPersonEntry.name} has already been removed from server`, type: 'err' })\n                        setTimeout(() => setMessageState({ message: null, type: null }), 5000)\n                        setPersons(persons.filter(person => newPersonEntry.id !== person.id))\n                    })\n            }\n            // inew person is not  in database\n        } else {\n            const personToAdd = { name: newName, number: newNumber }\n            create(personToAdd).then(addedPerson => {\n                setPersons([...persons, addedPerson])\n                setMessageState({ message: `Added ${addedPerson.name}`, type: 'success' })\n                setTimeout(() => setMessageState({ message: null, type: null }), 5000)\n            })\n\n\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n\n    // delete user from database\n    const deletEntry = personToDelete => {\n        if (window.confirm(`Delete ${personToDelete.name}?`)) {\n            remove(personToDelete.id)\n                .then(response => {\n                    setMessageState({ message: ` ${personToDelete.name} was succeefuly  removed from server`, type: 'success' })\n                    setTimeout(() => setMessageState({ message: null, type: null }), 5000)\n                    console.log(response.data)\n                })\n                .catch(err => {\n                    setMessageState({ message: `Information of ${personToDelete.name} has already been removed from server`, type: 'err' })\n                    setTimeout(() => setMessageState({ message: null, type: null }), 5000)\n                })\n            setPersons(persons.filter(person => person.id !== personToDelete.id))\n        }\n    }\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={messageState} />\n            <Filter filter={nameFilter} filterHandler={handleFilter} />\n            <h3>Add a new</h3>\n            <PersonForm handleSubmit={handleSubmit} newName={newName}\n                newNumber={newNumber} handleInput={handleInput} />\n            <h3>Numbers</h3>\n            <Persons persons={PersonsToShow} deletEntry={deletEntry} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}